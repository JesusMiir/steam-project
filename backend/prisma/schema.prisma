// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// MODELS

model User {
  id            Int         @id @default(autoincrement())
  name          String
  email         String      @unique
  avatarUrl     String?
  provider      String
  carts         Cart[]
  libraryItems  Library[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Game {
  id             Int         @id @default(autoincrement())
  title          String
  description    String
  price          Float
  genre          String
  cartItems      CartItem[]
  libraryItems   Library[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Cart {
  id        Int         @id @default(autoincrement())
  userId    Int
  user      User        @relation(fields: [userId], references: [id])
  cartItems CartItem[]

  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model CartItem {
  id      Int     @id @default(autoincrement())
  cartId  Int
  gameId  Int

  cart    Cart    @relation(fields: [cartId], references: [id])
  game    Game    @relation(fields: [gameId], references: [id])

  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Library {
  id      Int     @id @default(autoincrement())
  userId  Int
  gameId  Int

  user    User    @relation(fields: [userId], references: [id])
  game    Game    @relation(fields: [gameId], references: [id])

  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}
